{% set sub_categories = category.sub_categories %}

<section class="pb-10">
    <h2 class="text-grayColor lg:text-3xl text-xl text-center ltr:font-light section-title pt-4">{{ category.description }}</h2>
    <div class="md:px-8 px-4">
        <div class="splide" id="brands-category">
            <div class="splide__arrows">
                <button class="splide__arrow splide__arrow--prev !-right-px !w-[24px] lg:!w-[30px] bg-[#d6d6d6] !rounded !p-1.5">
                <svg class="flickity-button-icon text-primary h-4" fill="currentColor" viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z" class="arrow" transform="translate(100, 100) rotate(180) "></path></svg>
                </button>
                <button class="splide__arrow splide__arrow--next !-left-px !w-[24px] lg:!w-[30px] bg-[#d6d6d6] !rounded !p-1.5">
                <svg class="flickity-button-icon text-primary h-4" fill="currentColor" viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z" class="arrow" transform="translate(100, 100) rotate(180) "></path></svg>
                </button>
            </div>
            <div class="splide__track">
                <ul class="splide__list h-auto">
                {% for item in category.sub_categories %}
                <li class="splide__slide">
                    <a href="{{ item.url }}" class="lg:p-10 p-6 flex justify-center items-center">
                    <img src="{{ item.image }}" alt="" loading="lazy" class="object-contain">
                    </a>
                </li>
                {% endfor %}
                </ul>
            </div>
        </div>
    </div>
    <div id="letters" class="px-4 md:px-8"></div>
    <div id="categoriesLetters" class="grid lg:grid-cols-6 md:grid-cols-3 grid-cols-1 gap-y-2.5 md:px-8 px-0"></div>
</section>
<script>
    function groupItems() {
    let items = {{ sub_categories | json_encode | raw }};
    const sortedItems = items.sort((a, b) => {
        const aName = a.name ? a.name.toString() : a.toString();
        const bName = b.name ? b.name.toString() : b.toString();
        return aName.localeCompare(bName);
    });

    const groupedItems = sortedItems.reduce((groups, item) => {
        const itemName = item.name ? item.name.toString() : item.toString();
        const firstLetter = itemName.charAt(0).toLowerCase();
        if (!groups[firstLetter]) {
            groups[firstLetter] = [];
        }
        groups[firstLetter].push({ name: itemName, url: item.url });
        return groups;
    }, {});

    return groupedItems;
}


    function createCategory() {
    const groupedItems = groupItems();
    const categories = document.getElementById('categoriesLetters');
    const letters = document.getElementById('letters');
    letters.innerHTML = `<div class="flex flex-col"><h2 class="capitalize pb-2 font-semibold">{{ locals.index }}</h2><div class="flex items-center gap-y-4 gap-x-2 flex-wrap pb-4">${Object.keys(groupedItems).map(key => `<h2 class="">${key.toUpperCase()}</h2>`).join('')}</div></div>`;
    for (const [letter, items] of Object.entries(groupedItems)) {
        const categoryCon = document.createElement('div');
        categoryCon.classList.add('border-b', 'pb-2.5')
        categoryCon.innerHTML = `<div class="max-md:px-4"><h1 class="text-2xl font-semibold">${letter.toUpperCase()}</h1><ul>${items.map(item => `<li><a href="${item.url}" class="hover:underline">${item.name}</a></li>`).join('')}</ul></div>`;
        categories.append(categoryCon);
    }
    }

    createCategory();

  document.addEventListener('DOMContentLoaded', function() {
    new Splide(document.getElementById('brands-category'), {
	    type   : 'slide',
		direction: 'rtl',
		perPage: 6,
        autoplay: true,
        perMove:1,
        arrows: true,
        pagination: false,
        breakpoints: {
        720: {
            perPage: 3,
        },
        991: {
            perPage: 4,
        }
        }
    }).mount();
  });
</script>