{% extends "layout.twig" %}

{% block title %} {{ locals.product.products }} {% endblock %}

{% block header %} {{ include('header.twig') }} {% endblock %}

{% block main_content %}
    <ul class="flex items-center gap-2 justify-center px-5 pt-4 pb-2.5 border-b border-b-grayColor-100 max-w-5xl mx-auto">
        <li><a href="/">{{ locals.home.title }}</a></li>|
        <li><a href="/products/" class="font-semibold">{{ locals.product.products }}</a></li>    
    </ul>
    <section class="products md:px-8 lg:px-14 px-4">
        <div class="py-10 max-w-5xl mx-auto">
            {% include 'sort-filter.twig' with { 'products' : products } %}

            <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 products-list">
                {% for product in products.data %}
                    {% include 'product-card.twig' with {'product': product} %}
                {% endfor %}
            </div>
            <button class="hidden" x-on:click="loadProducts()">load</button>
            <script>
                let currentPage = {{ products.current_page }}
                let lastPage = {{ products.last_page }}
                // let filters = {{ products.filters | json_encode }}
                // console.log(filters)
                let requestPending = false
                let allProducts = document.querySelector('.products-list');

                // window.onscroll = function (e) {
                //     console.log(e)
                //     var distanceToBottom = allProducts.offsetHeight - (window.innerHeight + window.scrollY);

                //     if (distanceToBottom <= 900) {
                //         console.log('scroll end');
                //         loadProducts();
                //     } else {
                //         console.log('scroll');
                //     }
                // };

                async function loadProducts() {
                    // Check if a request is already pending or if we've reached the last page
                    // if (requestPending || currentPage >= lastPage) {
                    //     requestPending = false;
                    //     return false;
                    // }

                    // requestPending = true;

                    try {
                        document.getElementById('loading-spinner').classList.remove('hidden');

                        let response = await zid.store.product.fetchAll(null, { page: currentPage + 1 });

                        if (response.status === 'success') {
                            let products = response.data.products.data;
                            currentPage++;

                            let productsIds = [];
                            products.forEach((product) => {
                                if(!productsIds.includes(product.id)){
                                    productsIds.push(product.id)
                                    allProducts.appendChild(createProductBox(product))
                                }
                            })

                            if (currentPage >= lastPage) {
                                document.getElementById('loading-spinner').classList.add('hidden');
                            }
                        } 
                    } catch (error) {
                        console.error('An unexpected error occurred:', error);
                    } finally {
                        document.getElementById('loading-spinner').classList.add('hidden');
                        // requestPending = false;
                    }
                }

                function createProductBox(product) {
                    let newDiv = document.createElement('div');
                    newDiv.classList.add('product', 'h-full');
                    newDiv.innerHTML = `
                        <div class="flex flex-col justify-center gap-2 h-full">
                            <a class="mb-auto h-full relative" href="${product.html_url}">
                                <img class="w-full h-full m-auto object-contain"
                                    src="${product.images?product.images[0]['image']['large']:null}"
                                    alt="${product.name}" loading="lazy"/>
                                ${product.has_variants ? `
                                    <div class="${'soon' in product.keywords ? 'hidden' : ''} absolute text-center bottom-0 text-xs w-full bg-white">{{locals.product.options}}</div>
                                ` : ''}
                                ${'soon' in product.keywords ? `
                                    <div class="absolute uppercase top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-primary bg-[#ffffffab] py-1 text-xs font-medium text-center w-full">{{locals.product.soon}}</div>
                                ` : ''}
                                ${(product.is_infinite === false && product.quantity <= 0) ? `
                                    <div class="absolute uppercase top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-primary bg-[#ffffffab] py-1 text-xs font-medium text-center w-full ${'soon' in product.keywords ? 'hidden' : ''}">{{locals.product.out_of_stock}}</div>
                                ` : ''}
                            </a>

                            ${(() => {
                                let found = false;
                                for (const cat of product.categories) {
                                    console.log(cat.name.length, product.name.trim().slice(0, cat.name.trim().length))
                                    if (cat.name.length > 0 && product.name.trim().slice(0, cat.name.trim().length) === cat.name.trim()) {
                                        found = true;
                                        return `
                                            <p class="hidden text-green">${product.name.slice(0, cat.name.length)}</p>
                                            <h1 class="md:text-lg text-base text-center font-bold">${product.name.trim().slice(0, cat.name.trim().length)}</h1>
                                            <p class="text-center text-clip text-sm h-16 overflow-hidden">
                                                ${product.name.trim().slice(cat.name.trim().length)}
                                            </p>`;
                                    }
                                }
                                if (!found) {
                                    return `<h3 class="text-center text-clip text-sm h-16 overflow-hidden">${product.name}</h3>`;
                                }
                            })()}

                            <p class="text-center font-bold ${'soon' in product.keywords ? 'invisible' : ''}">
                                ${product.formatted_sale_price !== null ? product.formatted_sale_price : product.formatted_price}
                            </p>
                        </div>`;

                    return newDiv;
                }
            </script>

            {# {% include 'pagination.twig' with { 'totalPages' : products.last_page , 'currentPage' : products.current_page } %} #}
        </div>

    </section>

{% endblock %}

{% block footer %} {{ include('footer.twig') }} {% endblock %}